숫자를 많이 다뤄야 함
 -> 리스트? : 링크드 리스트라 엄청 느림
 -> 배열? : 한 데이터 타입만 저장 가능, 공간을 미리 할당 -> 속도 빠른 대신에 한번 크기 설정하면 못바꾼다. => 사이즈 늘리면 다른 공간을 잡아서 다 복사=>겁나 느림, 속도 빠르고, 용량 적게 먹는다
파이썬에서는 원래 배열이란게 없는데, nd_~라는 데이터 타입을 만들어서 가능하게 함

패키지
 사람들이 보통 부르는 이름 (Scikit-Learn, Numpy)
 다운시에 쳐야하는 이름 (scikit-learn, numpy)
 임포트 시에 쓰는 이름 (sklearn, numpy)

라이브러리=패키지 - 다운 받을 수 있는 목록(디스트리뷰션 패키지)
                  ㄴ임포트 패키지

as : 패키지를 다시 리네이밍(이 코드 내에서)
 numpy : np
 scipy : sp
 pandas : pd

array : 변환함수

첫수학은 도구이기 때문에 체화가 되어야 한다.

제대로 만든 파이썬 코드는 루프가 없어야 한다. : 없어도 짤 수 있고, 있으면 겁나 느리다.(인터프리터 포문이라)
 => 루프 횟수가 적다 + 어댑티브한 알고리즘이다 인 경우에만 씀
 functional programming

coding style => 회사내에서 지정
PEP8 => 파이썬 스타일 - 잘 지켜야 함 => 파이썬 전용 에디터로 연습
pycharm(editor, free)

(3,) => 1 차원 : ,의 이유는 없으면 튜플로 인식하지 않기 때문

벡터연산, 빠르다, 저장공간 적다


데이터 분석 => 데이터를 많이 모아두고 찾기 => query
배열인덱싱 : 배열[배열] => 배열[벡터라이즈드연산]


lineal alg---
공책
